name: Deploy to S3 and CloudFront

on:
  push:
    branches: [ main ]

permissions:
  id-token: write   # Required for OIDC authentication
  contents: read    # Required to checkout code

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build project
      run: npm run build
        
    - name: Configure AWS credentials using OIDC
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
        aws-region: ${{ secrets.AWS_REGION }}
        
    - name: Verify AWS Identity
      run: aws sts get-caller-identity
        
    - name: Verify build output
      run: |
        echo "ðŸ“‚ Checking build directory contents:"
        ls -la build/
        echo "ðŸ“Š Build directory size:"
        du -sh build/
        
    - name: Deploy to S3 with optimized caching
      run: |
        # Upload static assets with long cache
        aws s3 sync build/ s3://${{ secrets.S3_BUCKET_NAME }} \
          --delete \
          --cache-control "public, max-age=31536000, immutable" \
          --exclude "*.html" \
          --exclude "service-worker.js"
        
        # Upload HTML files with no cache
        aws s3 sync build/ s3://${{ secrets.S3_BUCKET_NAME }} \
          --cache-control "public, max-age=0, must-revalidate" \
          --exclude "*" \
          --include "*.html" \
          --include "service-worker.js"
        
    - name: Invalidate CloudFront
      run: |
        aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"
